@page
@model SistemaEducativo.Frontend.Pages.frontend.profesor.VerNotasModel
@{
    Layout = "_LayoutProfesor";
    ViewData["Title"] = "Ver Notas";
}

@inject IConfiguration Config

<section class="container mt-4">
    <h2>Notas</h2>

    <div id="notas-root" data-api-base="@Config["ApiBaseUrl"]"></div>
        <div class="alert alert-info">Cargando notas…</div>

        <div class="table-responsive d-none" id="notas-table-wrap">
            <table class="table table-striped align-middle">
                <thead>
                    <tr>
                        <th>Materia</th>
                        <th>Grupo</th>
                        <th>Nota</th>
                        <th>Condición</th>
                    </tr>
                </thead>
                <tbody id="notas-tbody"></tbody>
            </table>
        </div>
    </div>
</section>

<script defer>
    document.addEventListener('DOMContentLoaded', async () => {
      const root = document.getElementById('notas-root');
      const baseRaw = root.dataset.apiBase || '';
      const base = baseRaw.replace(/\/+$/,''); // quita / al final
      const url = `${base}/api/Notas/todas?soloActual=true`;

      // Mensaje de carga
      root.innerHTML = `<div class="alert alert-info">  </div>`;

      try {
        const res = await fetch(url);
        const text = await res.text(); // por si queremos loguear
        if (!res.ok) {
          root.innerHTML = `<div class="alert alert-warning">No pude cargar las notas (HTTP ${res.status}).</div>`;
          return;
        }

        let data;
        try {
          data = JSON.parse(text);
        } catch {
          root.innerHTML = `<div class="alert alert-danger">Respuesta del API no es JSON válido.</div>`;
          return;
        }

        if (!Array.isArray(data) || data.length === 0) {
          root.innerHTML = `<div class="alert alert-info">No hay notas para mostrar.</div>`;
          return;
        }

        // Render directo: reemplaza TODO el contenido del root
        const rows = data.map(n => `
          <tr>
            <td>${n.estudiante ?? n.Estudiante ?? ''}</td>
            <td>${n.idMatricula ?? n.IdMatricula ?? ''}</td>
            <td>${n.materia ?? n.Materia ?? ''}</td>
            <td>${n.grupo ?? n.Grupo ?? ''}</td>
            <td>${n.nota ?? n.Nota ?? ''}</td>
            <td>${n.condicion ?? n.Condicion ?? ''}</td>
          </tr>
        `).join('');

        root.innerHTML = `
          <div class="table-responsive">
            <table class="table table-striped align-middle">
              <thead>
                <tr>
                  <th>Estudiante</th>
                  <th>Matrícula</th>
                  <th>Materia</th>
                  <th>Grupo</th>
                  <th>Nota</th>
                  <th>Condición</th>
                </tr>
              </thead>
              <tbody>${rows}</tbody>
            </table>
          </div>`;
      } catch (e) {
        root.innerHTML = `<div class="alert alert-danger">Error de red: ${e}</div>`;
      }
    });
</script>